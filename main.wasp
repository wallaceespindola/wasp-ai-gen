app waspAiGen {
  wasp: {
    version: "^0.13.2"
  },
  title: "waspAiGen",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx",
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx",
}

entity User {=psl
    id     Int      @id @default(autoincrement()),
    aiData AIData[]
psl=}

entity AIData {=psl
    id      Int    @id @default(autoincrement()),
    content String,
    user    User   @relation(fields: [userId], references: [id]),
    userId  Int,
psl=}

action createAIData {
  fn: import { createAIData } from "@src/actions.js",
  entities: [AIData],
}

action updateAIData {
  fn: import { updateAIData } from "@src/actions.js",
  entities: [AIData],
}

action deleteAIData {
  fn: import { deleteAIData } from "@src/actions.js",
  entities: [AIData],
}

query getUserAIData {
  fn: import { getUserAIData } from "@src/queries.js",
  entities: [User, AIData],
}

query getAIData {
  fn: import { getAIData } from "@src/queries.js",
  entities: [AIData],
}

route AIDataRoute { path: "/aidata/:id", to: AIDataPage }
page AIDataPage {
  component: import AIDataPage from "@src/pages/AIData.jsx",
  authRequired: true,
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true,
}